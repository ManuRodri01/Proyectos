/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package gui.views;
import javax.swing.*;
import java.awt.*;
import logic.*;


public class GTask extends javax.swing.JPanel {

    static public final int taskHeight = 70;
    Task logicTask;
    LogicController logicController;
    GList parentList;
    int id;
    public GTask(GList parentList, LogicController logicController) {
        initComponents();
        this.logicController = logicController;
        this.parentList = parentList;
        logicTask = new Task("", false, parentList.getLogicList());
        this.id = logicTask.getId();
        this.parentList.disableAllLists();
        this.parentList.disable();
        this.parentList.setListsButon(false);
        this.setEnabled(true);
        btnDelete.setEnabled(false);
        completedCheck.setEnabled(false);
        this.setPreferredSize(new Dimension(GList.listWidth, taskHeight));
        logicController.createTask(logicTask);
        
        
    }
    
    public GTask(GList parentList, LogicController logicController, Task exisitingLogicTask) {
        initComponents();
        this.setPreferredSize(new Dimension(GList.listWidth, taskHeight));
        this.logicController = logicController;
        this.parentList = parentList;
        this.logicTask = exisitingLogicTask;
        this.id = exisitingLogicTask.getId();
        
        taskText.setText(exisitingLogicTask.getDescription());
        if(exisitingLogicTask.getIsCompleted()){
            taskText.setFont(parentList.getRockwellStriked());
            completedCheck.setSelected(true);
        }
        btnEdit.setIcon(new ImageIcon(this.getClass().getResource("/icons/edit.png")));
        taskText.setEditable(false);
        btnEdit.setSelected(false);
        
    }
    
    public Task getLogicTask(){
        return this.logicTask;
    }
    
    public void saveTaskInDB(){
        logicController.editTask(logicTask);
    }
    
    public void deleteTaskFromDB(){
        logicController.deleteTask(id);
    }
    
    @Override
    public void setEnabled(boolean bool){
        btnEdit.setEnabled(bool);
        btnDelete.setEnabled(bool);
        taskText.setEnabled(bool);
        completedCheck.setEnabled(bool);
    
    }
    
    private void saveChangesInBD(){
        logicController.editTask(logicTask);
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnEdit = new javax.swing.JToggleButton();
        btnDelete = new javax.swing.JButton();
        completedCheck = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        taskText = new javax.swing.JTextArea();

        setBackground(new java.awt.Color(255, 255, 255));

        btnEdit.setBackground(new java.awt.Color(255, 255, 255));
        btnEdit.setForeground(new java.awt.Color(255, 255, 255));
        btnEdit.setIcon(new javax.swing.ImageIcon(this.getClass().getResource("/icons/check_white.png")));
        btnEdit.setSelected(true);
        btnEdit.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnEdit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEdit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnEditMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnEditMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnEditMousePressed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(255, 255, 255));
        btnDelete.setIcon(new ImageIcon(this.getClass().getResource("/icons/trash.png")));
        btnDelete.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnDelete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDelete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnDeleteMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnDeleteMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnDeleteMouseExited(evt);
            }
        });

        completedCheck.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        completedCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                completedCheckActionPerformed(evt);
            }
        });

        taskText.setColumns(20);
        taskText.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        taskText.setLineWrap(true);
        taskText.setRows(5);
        taskText.setWrapStyleWord(true);
        jScrollPane1.setViewportView(taskText);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(completedCheck)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 285, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(completedCheck))
                        .addGap(0, 12, Short.MAX_VALUE)))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnEditMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEditMousePressed
        if(btnEdit.isEnabled() && SwingUtilities.isLeftMouseButton(evt)){
            if(btnEdit.isSelected()){
                btnEdit.setIcon(new ImageIcon(this.getClass().getResource("/icons/edit.png")));
                taskText.setEditable(false);
                parentList.setListsButon(true);
                btnDelete.setEnabled(true);
                parentList.enableAllList();
                logicTask.setDescription(taskText.getText());
                saveChangesInBD();
            }
            else{
                btnEdit.setIcon(new ImageIcon(this.getClass().getResource("/icons/check_white.png")));
                taskText.setEditable(true);
                btnEdit.setEnabled(true);

            }
        }

    }//GEN-LAST:event_btnEditMousePressed

    private void btnDeleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDeleteMouseClicked
        if(btnDelete.isEnabled() && SwingUtilities.isLeftMouseButton(evt)){
            parentList.deleteElement(this);
        }

    }//GEN-LAST:event_btnDeleteMouseClicked

    private void btnDeleteMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDeleteMouseEntered
        if(btnDelete.isEnabled())
        btnDelete.setBackground(Color.red);
    }//GEN-LAST:event_btnDeleteMouseEntered

    private void btnDeleteMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDeleteMouseExited
        if(btnDelete.isEnabled() )
        btnDelete.setBackground(Color.white);
    }//GEN-LAST:event_btnDeleteMouseExited

    private void completedCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_completedCheckActionPerformed
        
        if(completedCheck.isSelected() && completedCheck.isEnabled()){
            taskText.setFont(parentList.getRockwellStriked());
            logicTask.setIsCompleted(true);
            saveChangesInBD();
            this.revalidate();
            this.repaint();
        }
        else{
            taskText.setFont(new Font("rockwell",Font.PLAIN, 14));
            logicTask.setIsCompleted(false);
            saveChangesInBD();
        }

    }//GEN-LAST:event_completedCheckActionPerformed

    private void btnEditMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEditMouseEntered
        if(btnEdit.isEnabled()){
            if(btnEdit.isSelected()){
                btnEdit.setIcon(new ImageIcon(this.getClass().getResource("/icons/check_gray.png")));
            }
            btnEdit.setBackground(Color.lightGray);
        }        
    }//GEN-LAST:event_btnEditMouseEntered

    private void btnEditMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEditMouseExited
        if(btnEdit.isEnabled()){
            if(btnEdit.isSelected()){
                btnEdit.setIcon(new ImageIcon(this.getClass().getResource("/icons/check_white.png")));
            }
            btnEdit.setBackground(Color.white);
        }
    }//GEN-LAST:event_btnEditMouseExited


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JToggleButton btnEdit;
    private javax.swing.JCheckBox completedCheck;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea taskText;
    // End of variables declaration//GEN-END:variables
}
